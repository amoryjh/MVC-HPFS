@model IEnumerable<HPSMVC.Models.File>

@{
    ViewBag.Title = "Index";
}
<section>
    <div class="container">
        <h1>File Exchange</h1>

        <p>
            @Html.ActionLink("Upload File", "Create")
        </p>
        @using (Html.BeginForm())
        {
            <p>
                @Html.TextBox("SearchString")
                <input type="submit" value="Search" class="btn btn-solid"/>
                <a class="btn btn-solid" href="/Files">Clear</a>
            </p>
            
            <p style="color:red">
                @TempData["ValidationMessage"]
            </p>
        }
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("File Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
                </th>
                <th>
                    @Html.ActionLink("Category", "Index", new { sortOrder = ViewBag.CategorySortParm })
                </th>               
                <th>
                    @Html.DisplayNameFor(model => model.Viewer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.fileType)
                </th>
                <th>
                    File
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.fileName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Viewer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.fileType)
                    </td>
                    <td>
                        @{
                            try
                            {
                                if (item.fileContent != null && item.fileType.Contains("image"))
                             {
                                 string imageBase64 = Convert.ToBase64String(item.fileContent);
                                 string imageSrc = string.Format("data:" + item.fileType + ";base64,{0}", imageBase64);
                                 <img src="@imageSrc" style="max-height:100px;max-width:120px;" class="img-responsive" />
                             }
                             else
                             {
                                 <p>No Image</p>
                             }
                            }
                            catch
                            {
                                 <p>Oops, something happened</p>   
                            }
                         }
                    </td>
                    <td>
                        @Html.ActionLink("Download", "Download", new { id = item.ID }) |
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>
                </tr>
            }

        </table>
    </div>
</section>