@model HPSMVC.Models.Program

@{
    ViewBag.Title = "Edit";
}
<section>
    <div class="container">
        <h1 class="text-center">Edit Program</h1>


        @using (Html.BeginForm("Edit", "Care", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
            <div class="col-md-10 col-md-offset-1">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group"><div class="col-md-10 col-md-offset-2">
                @{
                    if (Model.fileContent != null)
                    {
                        string imageBase64 = Convert.ToBase64String(Model.fileContent);
                        string imageSrc = string.Format("data:" + Model.fileContent + ";base64,{0}", imageBase64);
                        if (Model.fileType.Contains("image"))
                        {
                            <img src="@imageSrc" style="max-height:400px;max-width:500px;" class="img-responsive img-rounded" /><br />
                        }          
                    }
                }
                </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2"> File:</label>
                    <div class="col-md-10">
                        Replace With:<input type="file" class="" name="program" />
                    </div>
                </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @placeholder = "Short paragraph about program", @rows = 5 })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
    <div class="form-group back_to_list">
        <div class="col-md-offset-2 col-md-10">
            <h4><i class="fa fa-chevron-left"></i> @Html.ActionLink("Back to List", "Admin")</h4>
    </div></div>
</div></div>
}

        
        @section Scripts {
            <script>
                /*$('#careImage').change(function () {
                    $('.btn-default').prop('disabled', !($('#careImage').val()));
                });*/
            </script>
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</section>