@model HPSMVC.Models.Event

@{
    ViewBag.Title = "Create";
}
<section>
    <div class="container">
        <h1 class="text-center">Create Event</h1>


        @using (Html.BeginForm("Create", "Events", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="col-md-10 col-md-offset-1">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="file" name="FileUpImage" id="careImage" /><br />
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder="Picnic 2016" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @placeholder = "Short paragraph about program", @rows = 5 })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", @placeholder = "Can be written as Noon, 2:01pm, or 16:41- it's up to you" } })
                            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @type = "text", @class = "form-control", @id = "datepicker", @placeholder = "01/31/2016" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div id="inputs" class="form-group">
                        <div class="col-md-10">
                            <input type="checkbox" value="All">All
                            <input type="checkbox" value="Default">Default
                            <input type="checkbox" value="Client">Client
                            <input type="checkbox" value="BoardDirectors">Board Directors
                            <input type="checkbox" value="FamilyAssoc">FamilyAssoc
                            <input type="checkbox" value="Administrator">Administrator
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Viewer, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Viewer, new { htmlAttributes = new { @class = "form-control", @id = "target", @placeholder = "Select Viewers From Checkboxes" } })
                            @Html.ValidationMessageFor(model => model.Viewer, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LinkText, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LinkText, new { htmlAttributes = new { @class = "form-control", @placeholder = "Click here!" } })
                            @Html.ValidationMessageFor(model => model.LinkText, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control", @placeholder = "Should look like http://site.com - if there's no http:// it won't work :O" } })
                            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input style="margin-left:0" type="submit" value="Create" class="btn btn-default" />
                            <input onclick="$(this).resetValidation()" type="reset" value="Reset" class="btn btn-default" />
                        </div>
                    </div>
                    <div class="form-group back_to_list">
                        <div class="col-md-offset-2 col-md-10">
                        <h4><i class="fa fa-chevron-left"></i> @Html.ActionLink("Back to List", "Admin")</h4>
                    </div></div>
                </div>
            </div>
        }
</section>
        @section Scripts {
            <script>
                var arr = [];
                $('#inputs input').change(function () {
                    if (this.checked) {
                        arr.push(this.value);
                    }
                    else {
                        arr.splice(arr.indexOf(this.value), 1);
                    }
                    $('#target').val(arr + '');
                });
            </script>
            @Scripts.Render("~/bundles/jqueryval")
        }
